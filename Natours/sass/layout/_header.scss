.header {
  height: 85vh;
  background-image: linear-gradient(
      to right bottom,
      rgba($color-primary-light, 0.8),
      rgba($color-primary-dark, 0.8)
    ),
    url("../img/hero-small.jpg");
  background-size: cover;
  /* the image will stay the same at top as we are changing the viewport. */
  background-position: top;

  @supports (clip-path: polygon(0 0)) or (webkit-clip-path: polygon(0 0)) {
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
    position: relative;
    height: 95vh;
  }

  @media only screen and (min-resolution: 192dpi) and (min-width: 37.5em),
    only screen and (-webkit-min-device-pixel-ratio: 2) and (min-width: 37.5em),
    only screen and (min-width: 125em) {
    background-image: linear-gradient(
        to right bottom,
        rgba($color-primary-light, 0.8),
        rgba($color-primary-dark, 0.8)
      ),
      url("../img/hero.jpg");
  }

  @include respond(phone) {
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
  }

  &__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem;
  }

  &__logo {
    height: 3.5rem;
  }

  &__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
  }
}

/* If you write only logo:hover is not going to work */
/* When we were hovering over the logo and animating it, the logo wanted to move; but when it did, our hover state was lost since the element was no longer under our active mouse. Essentially, the logo was 'freaking' out because it didn't know whether to animate / move or stay statically positioned, thus, we were left with an ugly, Shrodinger flicker effect. When we hover over the container (logo-box) instead, the logo is free to move as intended since our container remains static. */
.header__logo-box:hover .logo {
  animation: moveInRight 0.6s ease-out;
}
